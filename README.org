# -*- fill-column: 76; -*-
#+TITLE: SRv6 PFPLM implementation using XDP/eBPF and tc/eBPF
#+OPTIONS: ^:nil

* Table of Contents                                                     :TOC:
- [[#introduction][Introduction]]
- [[#first-step-setup-dependencies][First step: Setup dependencies]]
- [[#installing-srv6-pfplm-tools][Installing SRv6 PFPLM Tools]]
- [[#the-python-user-library][The Python user library]]

* Introduction

XDP is a part of the upstream Linux kernel, and enables users to install
packet processing programs into the kernel, that will be executed for each
arriving packet, before the kernel does any other processing on the data.
The programs are written in restricted C, and compiled into the eBPF byte
code format that is executed and JIT-compiled in the kernel, after being
verified for safety. This approach offers great flexibility and high
performance, and integrates well with the rest of the system. For a general
introduction to XDP, read [[https://github.com/xdp-project/xdp-paper/blob/master/xdp-the-express-data-path.pdf][the academic paper (pdf)]], or the [[https://cilium.readthedocs.io/en/latest/bpf/][Cilium BPF
reference guide]].

* First step: Setup dependencies

Before you can start completing step in this tutorial, you will need to
install a few dependencies on your system. These are are described in
[[file:setup_dependencies.org]].

* Installing SRv6 PFPLM Tools

The SRv6 PFPLM is provided through ebpf programs and shared libraries
(.so).

To compile the ebpf programs and the user libraries you have to issue the "make"
command in the root of the cloned project (referred as PRJ_ROOT):

#+BEGIN_SRC
PRJ_ROOT# make
#+END_SRC

At the end of compilation, in the PRJ_ROOT/srv6-pfplm folder you should have:
1) srv6_pfplm_kern.o
2) libpfplm.so

Make sure you have both these files before going further. If the make command
fails, check if all the dependencies are met (look at the PRJ_ROOT/README.org
file).

The libpfplm.so relies on the libbpf.so.0 library that should be available in
the LD_LIBRARY_PATH or it should be installed where the GNU linker can find it
(i.e.: /usr/lib/x86_64-linux-gnu, /usr/lib, etc).

The libbpf.so.0 is available at PRJ_ROOT/libbpf/src and you can check if the
library dependecies for the libpfplm.so are met by typing:

#+BEGIN_SRC
PRJ_ROOT/srv6-pfplm# ldd libpfplm.so
#+END_SRC

Hereafter the output of the ldd command shows some missing dependencies (for 
the libbpf.so.0):

#+BEGIN_SRC sh :results output
        linux-vdso.so.1 (0x00007fff5cdb8000)
        libbpf.so.0 => not found
        libelf.so.1 => /lib/x86_64-linux-gnu/libelf.so.1 (0x00007feded8a2000)
        libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007feded6e1000)
        libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007feded4c3000)
        /lib64/ld-linux-x86-64.so.2 (0x00007feded8d8000)
#+END_SRC


After fixing missing dependencies:

#+BEGIN_SRC sh :results output
        linux-vdso.so.1 (0x00007fff5cdb8000)
        libbpf.so.0 => /usr/lib/x86_64-linux-gnu/libbpf.so.0 (0x00007fa0f3c4b000)
        libelf.so.1 => /lib/x86_64-linux-gnu/libelf.so.1 (0x00007feded8a2000)
        libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007feded6e1000)
        libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007feded4c3000)
        /lib64/ld-linux-x86-64.so.2 (0x00007feded8d8000)
#+END_SRC


* The Python user library

To load the ebpf programs for monitoring packet loss, add flows, remove flows,
etc you can use directly the PRJ_ROOT/srv6-pfplm/libpfplm.so library or you can
leverage the python module PRJ_ROOT/srv6-pfplm/srv6_pfplm_helper_user.py.

DO NOT move the srv6_pfplm_helper_user.py from the PRJ_ROOT/srv6-pfplm
folder.
